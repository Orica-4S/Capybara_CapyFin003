<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:k="clr-namespace:KillApps;assembly=KillApps" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator queue name to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator folder name where the queue is created to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueFolder" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>844,936</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="90">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>KillApps</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="114">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>KillApps</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID2}" sap2010:Annotation.AnnotationText="Process Name - Capybara_CapyFin003&#xA;[Process description : This Process will run and would download the New Approach, List of SMD &amp; Freight charges &#xA; Tables from the SAP Application GUI. After downloading it would maintain the status of every downloaded file into&#xA;Status File. It would then upload the Downloaded files into the Sharepoint. At last the bot would send the Mail to the business with attached Status File.]&#xA;[Applications Involved : SAP GUI, Outlook, Excel, Browser]&#xA;[Developer- brijesh.patel@orica.com]" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="687.3333333333334,871.3333333333334" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">70,22.5</av:Point>
        <x:Double x:Key="StateContainerWidth">653.3333333333334</x:Double>
        <x:Double x:Key="StateContainerHeight">705</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">130,59.833333333333336 160,59.833333333333336 160,60.66666666666666 223,60.66666666666666</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="1. Generate To and From Dates for the Table.&#xA;2. Read the Status of the Tables from Status File.&#xA;3. Download New Approach, List of SMD &amp; Freight Charges Tables&#xA;4. Update the status of all Table in Status File.&#xA;5. Upload the Dowloaded files to Share Point&#xA;6. Discrad the Downloaded files in Other Folder&#xA;7. Send the Mail to the business with attached Status file." DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="231.33333333333334,316.6666666666667" sap2010:WorkflowViewState.IdRef="State_3">
      <State.Entry>
        <TryCatch DisplayName="Try to process transaction" sap:VirtualizedContainerService.HintSize="438.6666666666667,629.3333333333334" sap2010:WorkflowViewState.IdRef="TryCatch_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="400,358" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign BusinessException" sap:VirtualizedContainerService.HintSize="338,72" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Process workflow" sap:VirtualizedContainerService.HintSize="338,124" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\Process.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="Exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Handle Business Exception" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Set transaction status to BusinessRuleException" sap:VirtualizedContainerService.HintSize="338,72" sap2010:WorkflowViewState.IdRef="Assign_26">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <TryCatch DisplayName="Try Catch Set Transaction Status (BRE)" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (BRE)" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[BusinessException]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                          <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[Nothing]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,22" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="Log message (Failed to set transaction status BRE)" sap:VirtualizedContainerService.HintSize="334,104.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </Catch>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Handle System Exception" sap:VirtualizedContainerService.HintSize="500.6666666666667,266" sap2010:WorkflowViewState.IdRef="Sequence_30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Set transaction status to SystemException" sap:VirtualizedContainerService.HintSize="438.6666666666667,72" sap2010:WorkflowViewState.IdRef="Assign_27">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <TryCatch DisplayName="Try Catch SetTransactionStatus (SE)" sap:VirtualizedContainerService.HintSize="438.6666666666667,32" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TryCatch.Try>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (SE)" sap:VirtualizedContainerService.HintSize="334,124" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[Nothing]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                          <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="Log message (Failed to set transaction status SE)" sap:VirtualizedContainerService.HintSize="334,104.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">254.33333333333331,248</av:Point>
          <av:Size x:Key="ShapeSize">231.33333333333334,316.6666666666667</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">197</x:Double>
          <x:Double x:Key="StateContainerHeight">34</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">254.33333333333331,406.33333333333337 224.33333333333331,406.33333333333337 224.33333333333331,302 162,302</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">37</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">56</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>[SystemException is Nothing]</Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="End process and close all applications used." DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,125.33333333333333" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
              <State.Entry>
                <TryCatch DisplayName="Try to close all aplications" sap:VirtualizedContainerService.HintSize="720,2893.3333333333335" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence sap:VirtualizedContainerService.HintSize="681.3333333333334,2654" sap2010:WorkflowViewState.IdRef="Sequence_71">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strAttachment1" />
                        <Variable x:TypeArguments="x:String" Name="strAttachment2" />
                        <Variable x:TypeArguments="x:Int32" Name="IntNumberOfAttachments" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log message (close applications)" sap:VirtualizedContainerService.HintSize="619.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info" Message="[&quot;Closing applications...&quot;]" />
                      <k:KillApps AppsToClose="[Config(&quot;Process_Name&quot;).ToString]" sap:VirtualizedContainerService.HintSize="619.3333333333334,92" sap2010:WorkflowViewState.IdRef="KillApps_1" />
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Get Email Attachment Files &amp; Their Paths.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="619.3333333333334,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Workflows\Get Email Attachment Files &amp; Their Paths.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="Out_Attachment1">[strAttachment1]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="Out_Attachment2">[strAttachment2]</OutArgument>
                          <OutArgument x:TypeArguments="x:Int32" x:Key="Out_NumberofAttachments">[IntNumberOfAttachments]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="619.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="[&quot;Sending Email..&quot;]" />
                      <If Condition="[SystemException is Nothing]" sap:VirtualizedContainerService.HintSize="619.3333333333334,1984" sap2010:WorkflowViewState.IdRef="If_21">
                        <If.Then>
                          <Sequence sap:VirtualizedContainerService.HintSize="540.6666666666666,900.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_79">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[IntNumberOfAttachments&gt;1]" sap:VirtualizedContainerService.HintSize="478.6666666666667,790" sap2010:WorkflowViewState.IdRef="If_22">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,381.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Fin003_SendMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Workflows\Fin003_SendMail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_bln_SuccessEmail">
                                        <Literal x:TypeArguments="x:Boolean" Value="True" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_int_NoOfAttachments">
                                        <Literal x:TypeArguments="x:Int32" Value="1" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;logF_BusinessProcessName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwnerEmail">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_AttachmentsList">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Status_&quot; +Now.ToString(&quot;dd.MM.yyyy&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwner">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SuccessEmailMessage&quot;).ToString+&quot; &quot;+Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentPath">
                                        <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{strAttachment1}" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;BusinessEmail_Support&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SuccessEmailSubject&quot;).ToString +Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Fin003_SendMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Workflows\Fin003_SendMail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_bln_SuccessEmail">
                                        <Literal x:TypeArguments="x:Boolean" Value="True" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_int_NoOfAttachments">
                                        <Literal x:TypeArguments="x:Int32" Value="1" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;logF_BusinessProcessName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwnerEmail">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_AttachmentsList">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Status_&quot; +Now.ToString(&quot;dd.MM.yyyy&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwner">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SuccessEmailMessage&quot;).ToString+&quot; &quot;+Now.AddMonths(-1).ToString+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentPath">
                                        <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{strAttachment2}" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;BusinessEmail_Support&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SuccessEmailSubject&quot;).ToString+Now.AddMonths(-1).ToString+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,226" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Fin003_SendMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="Workflows\Fin003_SendMail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_bln_SuccessEmail">
                                        <Literal x:TypeArguments="x:Boolean" Value="True" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_int_NoOfAttachments">
                                        <Literal x:TypeArguments="x:Int32" Value="1" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;logF_BusinessProcessName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwnerEmail">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_AttachmentsList">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Status_&quot; +Now.ToString(&quot;dd.MM.yyyy&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwner">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SuccessEmailMessage&quot;).ToString+&quot; &quot;+Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentPath">
                                        <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{strAttachment1}" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;BusinessEmail_Support&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SuccessEmailSubject&quot;).ToString+Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap:VirtualizedContainerService.HintSize="540.6666666666666,900.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_80">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[IntNumberOfAttachments&gt;1]" sap:VirtualizedContainerService.HintSize="478.6666666666667,790" sap2010:WorkflowViewState.IdRef="If_23">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,381.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Fin003_SendMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="Workflows\Fin003_SendMail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_bln_SuccessEmail">
                                        <Literal x:TypeArguments="x:Boolean" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_int_NoOfAttachments">
                                        <Literal x:TypeArguments="x:Int32" Value="1" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;logF_BusinessProcessName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwnerEmail">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_AttachmentsList">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Status_&quot; +Now.ToString(&quot;dd.MM.yyyy&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwner">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SEEmailMessage&quot;).ToString+&quot; &quot;+Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentPath">
                                        <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{strAttachment1}" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;BusinessEmail_Support&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SE_EmailSubject&quot;).ToString +Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Fin003_SendMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Workflows\Fin003_SendMail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_bln_SuccessEmail">
                                        <Literal x:TypeArguments="x:Boolean" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_int_NoOfAttachments">
                                        <Literal x:TypeArguments="x:Int32" Value="1" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;logF_BusinessProcessName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwnerEmail">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_AttachmentsList">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Status_&quot; +Now.ToString(&quot;dd.MM.yyyy&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwner">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SEEmailMessage&quot;).ToString+&quot; &quot;+Now.AddMonths(-1).ToString+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentPath">
                                        <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{strAttachment2}" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;BusinessEmail_Support&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SE_EmailSubject&quot;).ToString+Now.AddMonths(-1).ToString+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="400,226" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Fin003_SendMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_43" UnSafe="False" WorkflowFileName="Workflows\Fin003_SendMail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_bln_SuccessEmail">
                                        <Literal x:TypeArguments="x:Boolean" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_int_NoOfAttachments">
                                        <Literal x:TypeArguments="x:Int32" Value="1" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;logF_BusinessProcessName&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwnerEmail">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_AttachmentsList">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Status_&quot; +Now.ToString(&quot;dd.MM.yyyy&quot;)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_ProcessOwner">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;Fin03-ProcessOwnerEmailsIds&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_str_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SEEmailMessage&quot;).ToString+&quot; &quot;+Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="in_AttachmentPath">
                                        <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{strAttachment1}" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;BusinessEmail_Support&quot;).ToString" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SE_EmailSubject&quot;).ToString+Now.ToString(&quot;MMMM&quot;)+&quot; Month&quot;" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dictConfig">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="686,22" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Failed to close applications, so kill processes" sap:VirtualizedContainerService.HintSize="400,362" sap2010:WorkflowViewState.IdRef="Sequence_26">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log message (Failed to close applications)" sap:VirtualizedContainerService.HintSize="338,96" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Error" Message="[&quot;Applications failed to close gracefully. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow (End process)" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config" />
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <If Condition="[SystemException IsNot Nothing AndAlso (Config Is Nothing OrElse Convert.ToBoolean(Config(&quot;ShouldMarkJobAsFaulted&quot;)))]" DisplayName="If SystemException IsNot Nothing" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_14">
                      <If.Then>
                        <TerminateWorkflow DisplayName="Terminate Main Workflow" Exception="[SystemException]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" />
                      </If.Then>
                    </If>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">18,208</av:Point>
                  <av:Size x:Key="ShapeSize">144,125.33333333333333</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </State>
          </Transition.To>
        </Transition>
        <Transition DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="451.333333333333,521.333333333333" sap2010:WorkflowViewState.IdRef="Transition_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">323.73333333333335,564.6666666666667 323.73333333333335,594.6666666666667 90,594.6666666666667 90,333.3333333333333</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID0</x:Reference>
          </Transition.To>
          <Transition.Condition>[SystemException IsNot Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID0</x:Reference>
    <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Read configuration file and initialize applications used in the process." DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="1043.3333333333333,3054.6666666666665" sap2010:WorkflowViewState.IdRef="State_2">
      <State.Entry>
        <TryCatch DisplayName="Try initializing settings and applications" sap:VirtualizedContainerService.HintSize="996.6666666666666,2624" sap2010:WorkflowViewState.IdRef="TryCatch_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Sequence DisplayName="Load configurations and open applications" sap:VirtualizedContainerService.HintSize="958,2384.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign SystemException (initialization)" sap:VirtualizedContainerService.HintSize="896,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                </Assign.Value>
              </Assign>
              <If sap2010:Annotation.AnnotationText="An uninitialized Config dictionary indicates that it is the first run of the process." Condition="[Config is Nothing]" DisplayName="If first run, read local configuration file" sap:VirtualizedContainerService.HintSize="896,1313.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="462,1000" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="File_Exist" />
                      <Variable x:TypeArguments="x:String" Name="strCurrentMonth" />
                      <Variable x:TypeArguments="x:String" Name="strPreviousMonth" />
                      <Variable x:TypeArguments="x:String" Name="strConfigFilePath" />
                      <Variable x:TypeArguments="x:String" Name="strTempFilePath" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message screen resolution" sap:VirtualizedContainerService.HintSize="400,96" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;The primary screen resolution is: &quot;+Screen.PrimaryScreen.Bounds.Width.ToString+&quot; x &quot;+ Screen.PrimaryScreen.Bounds.Height.ToString]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LogMessage>
                    <Sequence sap2010:Annotation.AnnotationText="Download Config file from Storage bucket to local folder" DisplayName="Download Config File" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_76">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="boolConfigFileExists" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Config File local path" sap:VirtualizedContainerService.HintSize="416.6666666666667,94" sap2010:WorkflowViewState.IdRef="Assign_32">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strConfigFilePath]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Data/Config.xlsx</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolConfigFileExists]" sap:VirtualizedContainerService.HintSize="416.6666666666667,92" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[strConfigFilePath]" PathType="File" />
                      <If sap2010:Annotation.AnnotationText="Check if config file exists then delete the existing file else continue process" Condition="[boolConfigFileExists]" DisplayName="If | Config File exists" sap:VirtualizedContainerService.HintSize="416.6666666666667,432.6666666666667" sap2010:WorkflowViewState.IdRef="If_20">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="334,90.66666666666667" sap2010:WorkflowViewState.IdRef="DeleteFileX_7" Path="[strConfigFilePath]" />
                        </If.Then>
                        <If.Else>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,104.66666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Trace" Message="[&quot;Config file not deleted.&quot;]" />
                        </If.Else>
                      </If>
                      <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[strConfigFilePath]" DisplayName="Download Storage File" FolderPath="Capybara Processes/FIN03-Account Payable" sap:VirtualizedContainerService.HintSize="416.6666666666667,145.33333333333334" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="Capybara_CapyFin003_Config.xlsx" StorageBucketName="Config Files">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ucas:DownloadStorageFile>
                    </Sequence>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Read Config File" sap:VirtualizedContainerService.HintSize="400,25.333333333333332" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow (first run)" sap:VirtualizedContainerService.HintSize="400,137.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <Sequence sap2010:Annotation.AnnotationText="Check if required folders are present else Create the folders." DisplayName="Create Folders (If Does Not Exist)" sap:VirtualizedContainerService.HintSize="400,80" sap2010:WorkflowViewState.IdRef="Sequence_31">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Check Else Create &quot;Fin003&quot; Folder" sap:VirtualizedContainerService.HintSize="338,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_20" Path="[Config(&quot;OutputFolder_Path&quot;).ToString+Config(&quot;Fin003FolderName&quot;).ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CreateDirectory>
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;Current Month&quot; Folder" sap:VirtualizedContainerService.HintSize="338,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.ToString(&quot;MMMM&quot;)]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;Latest Record&quot; Folder" sap:VirtualizedContainerService.HintSize="338,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;New Approach&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString+&quot;\&quot;+Config(&quot;NewApproachFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;List of SMD&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_6" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString+&quot;\&quot;+Config(&quot;ListOfSMDFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;Freight Charges&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_8" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString+&quot;\&quot;+Config(&quot;FreightChargesFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;Previous Month&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_15" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.AddMonths(-1).ToString(&quot;MMMM&quot;)]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;Latest Record&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_16" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.AddMonths(-1).ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;New Approach&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_17" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.AddMonths(-1).ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString+&quot;\&quot;+Config(&quot;NewApproachFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;List of SMD&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_18" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.AddMonths(-1).ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString+&quot;\&quot;+Config(&quot;ListOfSMDFolderName&quot;).ToString]" />
                      <ui:CreateDirectory Output="{x:Null}" ContinueOnError="True" DisplayName="Check Else Create &quot;Freight Charges&quot; Folder" sap:VirtualizedContainerService.HintSize="338,90.66666666666667" sap2010:WorkflowViewState.IdRef="CreateDirectory_19" Path="[Config(&quot;OutputFolder_Path&quot;).ToString +Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ system.DateTime.Now.addmonths(-1).ToString(&quot;MMMM&quot;) +&quot;\&quot;+Config(&quot;LatestRecordsFolderName&quot;).ToString+&quot;\&quot;+Config(&quot;FreightChargesFolderName&quot;).ToString]" />
                    </Sequence>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Delete Files if Already Present in Folder.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="400,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Workflows\Delete Files if Already Present in Folder.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Download Template File and Create a Copy of Template File.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="400,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Workflows\Download Template File and create a Copy Of Template File.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="In_Config">[Config]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
              </If>
              <ui:RetryScope DisplayName="Retry only Once for Loging into SAP Application" sap:VirtualizedContainerService.HintSize="896,817.3333333333334" sap2010:WorkflowViewState.IdRef="RetryScope_10" NumberOfRetries="[Convert.ToInt32(Config(&quot;MaxRetryNumberForSAP&quot;).ToString.Trim)]" RetryInterval="[TimeSpan.FromSeconds(CInt(Config(&quot;RetryInterval&quot;).ToString.Trim))]">
                <ui:RetryScope.ActivityBody>
                  <ActivityAction>
                    <Sequence DisplayName="Kill all other In-scope Application and then  Open SAP GUI" sap:VirtualizedContainerService.HintSize="400,226" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Username" />
                          <InArgument x:TypeArguments="x:String" x:Key="Password" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ActivityAction>
                </ui:RetryScope.ActivityBody>
                <ui:RetryScope.Condition>
                  <ActivityFunc x:TypeArguments="x:Boolean">
                    <uix:NCheckState DisplayName="Check App State 'General Table Display Home Screen'" sap:VirtualizedContainerService.HintSize="854,429.3333333333333" sap2010:WorkflowViewState.IdRef="NCheckState_1" Timeout="[Double.Parse(Config(&quot;Delay_S&quot;).ToString)]" Version="V3">
                      <uix:NCheckState.IfExists>
                        <Sequence DisplayName="Target appears" sap:VirtualizedContainerService.HintSize="400,107.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_77">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </uix:NCheckState.IfExists>
                      <uix:NCheckState.IfNotExists>
                        <Sequence DisplayName="Target does not appear" sap:VirtualizedContainerService.HintSize="400,208" sap2010:WorkflowViewState.IdRef="Sequence_78">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Throw Exception="[New SystemException(Config(&quot;SE_FailedSE16N&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="Throw_1" />
                        </Sequence>
                      </uix:NCheckState.IfNotExists>
                      <uix:NCheckState.Target>
                        <uix:TargetAnchorable ContentHash="4B5_arT7b0SbZ0ptA2jSYg" DesignTimeRectangle="21, 56, 1900, 72" DesignTimeScaleFactor="1.5" ElementType="Toolbar" FriendlyName="'General Table Display Home Screen'" FullSelectorArgument="&lt;sap id='titl' /&gt;" FuzzySelectorArgument="&lt;sap id='titl' check:text='General Table Display' /&gt;" Guid="96abc6bb-0b89-4b27-bb3c-c6f23fd36a0f" InformativeScreenshot="9a0b9089b5074b7678a3b3e9a699b505.png" Reference="Pb_s-4O4PkW9yNQgjolyDg/DGrRsoVz4kGaNEyFMVet9g" ScopeSelectorArgument="&lt;wnd app='saplogon.exe' cls='SAP_FRONTEND_SESSION' title='General Table Display' /&gt;" SearchSteps="Selector" Version="V1" Visibility="Interactive" />
                      </uix:NCheckState.Target>
                    </uix:NCheckState>
                  </ActivityFunc>
                </ui:RetryScope.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:RetryScope>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="962.6666666666666,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                </ActivityAction.Argument>
                <Assign sap2010:Annotation.AnnotationText="Failures during the initialization are considered system exceptions and lead to the End Process state, thus finalizing the execution." DisplayName="Assign SystemException" sap:VirtualizedContainerService.HintSize="262,94" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">223,6.66666666666666</av:Point>
          <av:Size x:Key="ShapeSize">254,108</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">220</x:Double>
          <x:Double x:Key="StateContainerHeight">25</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="System Exception (failed initialization)" sap:VirtualizedContainerService.HintSize="448.8,802.4" sap2010:WorkflowViewState.IdRef="Transition_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">350,114.66666666666666 350,144.66666666666666 82.8,144.66666666666666 82.8,208</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID0</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log Message (initialization failure)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error" Message="[&quot;System exception at initialization: &quot; + SystemException.Message + &quot; at Source: &quot; + SystemException.Source]" />
          </Transition.Action>
          <Transition.Condition>[SystemException isNot Nothing]</Transition.Condition>
        </Transition>
        <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">375.40000000000003,114.66666666666666 375.40000000000003,144.66666666666666 427.8333333333333,144.66666666666666 427.8333333333333,248</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">47</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">58</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Condition>[SystemException is Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" sap2010:Annotation.AnnotationText="Transaction item to be processed. The type of this variable can be changed to match the transaction type in the process. For example, when processing data from a spreadsheet that is read into a DataTable, this type can be changed to DataRow. " Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used during transitions between states to represent exceptions other than business exceptions." Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" sap2010:Annotation.AnnotationText="Used during transitions between states and represents a situation that does not conform to the rules of the process being automated." Name="BusinessException" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="Config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying the transaction processing in case of system exceptions." Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Used in case transactions are stored in a DataTable, for example, after being retrieved from a spreadsheet." Name="dt_TransactionData" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of consecutive system exceptions." Default="0" Name="ConsecutiveSystemExceptions" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Status" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>