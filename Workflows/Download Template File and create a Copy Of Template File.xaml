<Activity mc:Ignorable="sap sap2010" x:Class="Download_Template_File_and_create_a_Copy_Of_Template_File" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>844,1153.3333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Download_Template_File_and_create_a_Copy_Of_Template_File_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="30">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="[Workflow Name]:-&#xA;Download Template File &amp; Create a Copy Of Template File in Required Folder&#xA;&#xA;[Description]:-&#xA;This workflow is going to Download the Template File from storage bucket and would create copy of template file into the required folder. If BoolValue of Assest &quot;RunForBothMonths&quot; is True then it would create copy in Previous month Name and Current Month Name Folder, &amp; If False then it would create a copy only in Current Month Name Folder&#xA;&#xA;[Config values]:-&#xA;&#xA;[Input]:-&#xA;@In_Config:- Dictionary&lt;string,object&gt; containing configurable key value pairs for variables to be used.&#xA;&#xA;[Output]:-&#xA;&#xA;[Remarks]:- &#xA;In case of any errors the workflow will capture the error,log custom message  and rethrow the error.&#xA;&#xA;[Author]:- &#xA;brijesh.patel@orica.com" DisplayName="Download Template File &amp; Create a Copy Of Template File in Required Folder" sap:VirtualizedContainerService.HintSize="782,3884.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strTempFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="File_Exist" />
      <Variable x:TypeArguments="x:String" Name="strPreviousMonth" />
      <Variable x:TypeArguments="x:String" Name="strCurrentMonth" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="720,3428.6666666666665" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="681.3333333333334,3189.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="619.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Downloading Template File&quot;]" />
          <Sequence sap2010:Annotation.AnnotationText="Download Template file from Storage bucket to local folder" DisplayName="Download Template File From Storage Bucket" sap:VirtualizedContainerService.HintSize="619.3333333333334,1012" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="boolConfigFileExists" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap2010:Annotation.AnnotationText="Config File local path" sap:VirtualizedContainerService.HintSize="412.6666666666667,94" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strTempFilePath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[In_Config("Template_FilePath").ToString]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[boolConfigFileExists]" sap:VirtualizedContainerService.HintSize="412.6666666666667,92" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[strTempFilePath]" PathType="File" />
            <If sap2010:Annotation.AnnotationText="Check if config file exists then delete the existing file else continue process" Condition="[boolConfigFileExists]" DisplayName="If | Config File exists" sap:VirtualizedContainerService.HintSize="412.6666666666667,428" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[strTempFilePath]" />
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,96" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Template file not deleted.&quot;]" />
              </If.Else>
            </If>
            <ucas:DownloadStorageFile TimeoutMS="{x:Null}" Destination="[strTempFilePath]" DisplayName="Download Storage File" FolderPath="[In_Config(&quot;OrchestratorAssetFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="412.6666666666667,136.66666666666666" sap2010:WorkflowViewState.IdRef="DownloadStorageFile_1" Path="[In_Config(&quot;Template_FilepStorageBucketPath&quot;).ToString]" StorageBucketName="[In_Config(&quot;Template_FileStorageBucketName&quot;).ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ucas:DownloadStorageFile>
          </Sequence>
          <ui:PathExists Resource="{x:Null}" DisplayName="&quot;Template File&quot;Path Exists" Exists="[File_Exist]" sap:VirtualizedContainerService.HintSize="619.3333333333334,92" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[strTempFilePath]" PathType="File" />
          <ui:MultipleAssign DisplayName="Multiple Assign Previous &amp; Current Month Names" sap:VirtualizedContainerService.HintSize="619.3333333333334,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strPreviousMonth]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Now.AddMonths(-1).ToString("MMMM")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:String">[strCurrentMonth]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:String">[Now.ToString("MMMM")]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
          </ui:MultipleAssign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="619.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[&quot;Creating A Copy of Template File&quot;]" />
          <If Condition="[File_Exist=True]" DisplayName="Create a copy of Template File" sap:VirtualizedContainerService.HintSize="619.3333333333334,1315.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Make a Copy of Template File" sap:VirtualizedContainerService.HintSize="540.6666666666666,1032.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[In_Config(&quot;RunforBothMonths&quot;).ToString=&quot;True&quot;]" DisplayName="If Condition is true then create status file for current month and previous month too." sap:VirtualizedContainerService.HintSize="478.6666666666667,922" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,469.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CopyFile ContinueOnError="True" Destination="[In_Config(&quot;OutputFolder_Path&quot;).ToString+In_Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+strPreviousMonth+&quot;\&quot;+&quot;Status_&quot;+DateTime.now.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.XLSX&quot;]" DisplayName="Copy File in Previous Month Folder" sap:VirtualizedContainerService.HintSize="338,159.33333333333334" sap2010:WorkflowViewState.IdRef="CopyFile_1" Path="[strTempFilePath]" />
                      <ui:CopyFile ContinueOnError="True" Destination="[In_Config(&quot;OutputFolder_Path&quot;).ToString+In_Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+strCurrentMonth+&quot;\&quot;+&quot;Status_&quot;+DateTime.now.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.XLSX&quot;]" DisplayName="Copy File in Current Month Folder" sap:VirtualizedContainerService.HintSize="338,159.33333333333334" sap2010:WorkflowViewState.IdRef="CopyFile_2" Path="[strTempFilePath]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,270" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CopyFile ContinueOnError="True" Destination="[In_Config(&quot;OutputFolder_Path&quot;).ToString+In_Config(&quot;Fin003FolderName&quot;).ToString+&quot;\&quot;+ strCurrentMonth+&quot;\&quot;+&quot;Status_&quot;+DateTime.now.ToString(&quot;dd.MM.yyyy&quot;)+&quot;.XLSX&quot;]" DisplayName="Copy File in Current Month Folder" sap:VirtualizedContainerService.HintSize="338,159.33333333333334" sap2010:WorkflowViewState.IdRef="CopyFile_3" Path="[strTempFilePath]" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Throw Exception="[New SystemException(&quot;Template File Not Found&quot;)]" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Else>
          </If>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="619.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Copy of Template File was Created Successfully&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="686,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="400,338.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,96" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[In_Config(&quot;SE_TemplateFile&quot;).ToString]" />
              <Throw Exception="[new SystemException(In_Config(&quot;SE_TemplateFile&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>